winners <- which(r3winners)
# there is a winner, so print the name
phrase <- paste(candidates[winners],"is a winner!")
print(phrase)
# inelegant building of table with results by round
results$round1 <- r1
results$round2 <- 0
results$round2[1] <- votesToWin
results$round2[2:4] <- r2
results$round3 <- 0
results$round3[1] <- votesToWin
results$round3[2:3] <- r3
cnames <- c("E.-S. Ko", "J. Kominsky", "B. McMillan", "F. Margoni")
results$candidates <- cnames
results %>%
gt() %>%
fmt_number(
columns = c(round2, round3),
rows = 2:4,
decimals = 1
) %>%
tab_header(
title = "ManyBabies Election 2022",
subtitle = "Governing Board - 2 seats"
) %>%
tab_style(
style = cell_fill(color = "green"),
locations = cells_body(
columns = c(round1, round2, round3),
rows = 1
)
) %>%
tab_style(
style = cell_fill(color = "red"),
locations = cells_body(
columns = c(round2, round3),
rows = 4
)
) %>%
tab_style(
style = cell_fill(color = "green"),
locations = cells_body(
columns = round3,
rows = 3
)
)
source("helper/preprocessing.R")
knitr::opts_chunk$set(cache = TRUE)
# Lab information
data.labs <- read_labs("data/labs.csv")
# Participants data
data.cdi <- list.files("data/cdi_raw/") %>%
map_dfr(read_cdi, save_unprocessed = !file.exists("data/00_unprocessed_cdi_merged.csv")) %>%
drop_na(labid) %>%
mutate(subid_unique = paste(labid, subid, sep = ":"),
standardized.score.CDI.num = str_replace(standardized.score.CDI, "<1", "0"),
CDI.agerange = case_when(!(CDI.agerange %in% c("18", "24")) ~
if_else(CDI.agedays < 21*365.25/12, "18", "24"),
T ~ as.character(CDI.agerange)),
CDI.form = str_replace(CDI.form, "webcdi", "webCDI"),
CDI.error = (CDI.error == "error")) %>%
mutate_at(vars(subid, CDI.form, CDI.agerange),
as_factor) %>%
left_join(data.labs) %>%
mutate_at(vars(labid), as_factor) %>%
mutate_at(vars(standardized.score.CDI.num), as.numeric)
# Check for labs that signed up but didn't send data:
missing_labs <- setdiff(levels(data.labs$labid),
levels(data.cdi$labid)) %>%
str_sort()
# Count data points, print cases were we have more than expected
data.cdi %>%
count(subid_unique, CDI.agerange) %>%
subset(n != 1)
# Only a few issues, let's check if they are subid typos or duplicate entries
data.cdi %>%
group_by(subid_unique, CDI.agerange) %>%
summarise(n = n(), n_unique = n_distinct(vocab_nwords)) %>%
subset(n != 1)
data.cdi <- data.cdi %>%
subset(!(subid_unique %in% c("babylab-lmu:35", "babylab-lmu:76", "unlv-musiclab:MB021") &
CDI.error %in% c("error", TRUE))) %>%
subset(!(subid_unique == "InfantCog-UBC:tp13" & vocab_nwords != 470)) %>%
unique()
# Import IDS data, rename variables, change column types
data.ids <- read_csv("data/ids_preference_trial.csv") %>%
rename(labid = lab) %>%
mutate_at(vars(labid, subid), as_factor) %>%
mutate(gender = str_sub(gender, 1, 1)) # Some data coded as "(FE)MALE" instead of F/M
# Check for labid present in CDI but not IDS (i.e. differently named), and vice versa
changed_labid <- setdiff(data.cdi$labid,
data.ids$labid)
unused_labid <- setdiff(data.ids$labid,
data.cdi$labid)
# By hand, we see that the names seem to be the same but with "-" or "_" added in data.cdi
# Only exception: leeds-lcdu in data.cdi should be lcduleeds
data.cdi <- data.cdi %>%
mutate(labid = case_when(labid == "leeds-lcdu" ~ "lcduleeds",
labid == "InfantCog-UBC" ~ "infantcogubc",
labid == "princeton-babylab" ~ "babylabprinceton",
labid == "um_babylanguagelab" ~ "bllumanitoba",
T ~ str_remove_all(labid, "-|_"))) %>%
mutate_at(vars(labid), as_factor)
# We check again for safety
changed_labid <- setdiff(data.cdi$labid,
data.ids$labid)
# Update subid_unique in CDI
data.cdi <- data.cdi %>%
mutate(subid_unique = paste(labid, subid, sep = ":"))
# Check for labid present in CDI but not IDS (i.e. differently named)
changed_subid <- setdiff(data.cdi$subid_unique,
data.ids$subid_unique)
# Many subids to check, let's extract the labs with issues
changed_subid_labs <- changed_subid %>%
str_match("[a-z]+") %>%
unique()
# Too many lab, let's print for each lab the proposed subids (CDI) and the possible subids (IDS)
unused_subid <- setdiff(data.ids$subid_unique,
data.cdi$subid_unique)
check_subid <- changed_subid_labs %>%
map(~list(CDI = str_subset(changed_subid, .x) %>% str_sort(),
IDS = str_subset(unused_subid, .x) %>% str_sort())) %>%
setNames(changed_subid_labs)
# Fix formatting issues, update subid_unique
data.cdi <- data.cdi %>%
mutate_at(vars(subid), as.character) %>%
mutate(subid = case_when(labid == "babylabbrookes" ~ str_replace(subid, "brookes-", "mb"),
labid == "bcrlunlv" ~ paste0("mb", str_pad(subid, 4, pad = 0)),
labid == "lscppsl" ~ paste0(subid, "lscppsl"),
labid == "babylabprinceton" ~ str_replace(subid, "MB",
"manybabies"),
labid == "unlvmusiclab" ~ str_replace(subid, "MB", "run"),
labid %in% changed_subid_labs ~
str_remove_all(subid, "-|_") %>% str_to_lower(),
T ~ subid),
subid_unique = paste(labid, subid, sep = ":")) %>%
mutate_at(vars(subid, subid_unique), as_factor)
# Check again for safety
changed_subid <- setdiff(data.cdi$subid_unique,
data.ids$subid_unique)
unused_subid <- setdiff(data.ids$subid_unique,
data.cdi$subid_unique)
changed_subid_labs <- changed_subid %>%
str_match("[a-z]+") %>%
unique()
check_subid <- changed_subid_labs %>%
map(~list(CDI = str_subset(changed_subid, .x) %>% str_sort(),
IDS = str_subset(unused_subid, .x) %>% str_sort())) %>%
setNames(changed_subid_labs)
check_subid.tibble <- check_subid %>%
map_dfr(~tibble(CDI = list(.x[["CDI"]]), IDS = list(.x[["IDS"]])), .id = "labid") %>%
gather(key = "dataset", value = "subids", -labid) %>%
unnest(subids) %>%
mutate(subids = str_remove(subids, "[a-z]+:")) %>%
mutate_all(as_factor)
# Import subids from all participants in IDS (before exculsion) for labs that provided CDI data
data.ids.full.subids <- read_csv("data/ids_full.csv",
col_types = cols_only(
lab = col_character(),
subid_unique = col_character()
)) %>%
rename(labid = lab) %>%
subset(labid %in% levels(data.cdi$labid))
# Compare to subids in CDI
changed_subid.full <- setdiff(data.cdi$subid_unique,
data.ids.full.subids$subid_unique)
unused_subid.full <- setdiff(data.ids.full.subids$subid_unique,
data.cdi$subid_unique)
changed_subid_labs.full <- changed_subid.full %>%
str_match("[a-z]+") %>%
unique()
check_subid.full <- changed_subid_labs.full %>%
map(~list(CDI = str_subset(changed_subid.full, .x) %>% str_sort(),
IDS = str_subset(unused_subid.full, .x) %>% str_sort())) %>%
setNames(changed_subid_labs.full)
check_subid.tibble.full <- check_subid.full %>%
map_dfr(~tibble(CDI = list(.x[["CDI"]]), IDS = list(.x[["IDS"]])), .id = "labid") %>%
gather(key = "dataset", value = "subids", -labid) %>%
unnest(subids) %>%
mutate(subids = str_remove(subids, "[a-z]+:")) %>%
mutate_all(as_factor)
# Save problematic labs' unmatched subids
check_subid.tibble.full %>%
nest(data = c(dataset, subids)) %>%
pwalk(~ write_csv(.y, paste0("data/subids/", .x, ".csv")))
data.cdi <- data.cdi %>%
mutate(subid = case_when(labid == "chosunbaby" ~ str_replace(subid, "h71y23", "h71o23"),
labid == "unlvmusiclab" ~ str_replace(subid, "run001", "run001pilot"),
T ~ as.character(subid)),
subid_unique = paste(labid, subid, sep = ":")) %>%
mutate_at(vars(subid, subid_unique), as_factor)
data.merged <- left_join(data.cdi, data.ids)
write_csv(data.merged, "data/01_processed_merged.csv")
View(data.cdi)
source("helper/preprocessing.R")
knitr::opts_chunk$set(cache = TRUE)
# Lab information
data.labs <- read_labs("data/labs.csv")
# Participants data
data.cdi <- list.files("data/cdi_raw/") %>%
map_dfr(read_cdi, save_unprocessed = !file.exists("data/00_unprocessed_cdi_merged.csv")) %>%
drop_na(labid) %>%
mutate(subid_unique = paste(labid, subid, sep = ":"),
standardized.score.CDI.num = str_replace(standardized.score.CDI, "<1", "0"),
CDI.agerange = case_when(!(CDI.agerange %in% c("18", "24")) ~
if_else(CDI.agedays < 21*365.25/12, "18", "24"),
T ~ as.character(CDI.agerange)),
CDI.form = str_replace(CDI.form, "webcdi", "webCDI"),
CDI.error = (CDI.error == "error")) %>%
mutate_at(vars(subid, CDI.form, CDI.agerange),
as_factor) %>%
left_join(data.labs) %>%
mutate_at(vars(labid), as_factor) %>%
mutate_at(vars(standardized.score.CDI.num), as.numeric)
# Check for labs that signed up but didn't send data:
missing_labs <- setdiff(levels(data.labs$labid),
levels(data.cdi$labid)) %>%
str_sort()
View(data.cdi)
source("helper/preprocessing.R")
knitr::opts_chunk$set(cache = TRUE)
# Lab information
data.labs <- read_labs("data/labs.csv")
# Participants data
data.cdi <- list.files("data/cdi_raw/") %>%
map_dfr(read_cdi, save_unprocessed = !file.exists("data/00_unprocessed_cdi_merged.csv")) %>%
drop_na(labid) %>%
mutate(subid_unique = paste(labid, subid, sep = ":"),
standardized.score.CDI.num = str_replace(standardized.score.CDI, "<1", "0"),
CDI.agerange = case_when(!(CDI.agerange %in% c("18", "24")) ~
if_else(CDI.agedays < 21*365.25/12, "18", "24"),
T ~ as.character(CDI.agerange)),
CDI.form = str_replace(CDI.form, "webcdi", "webCDI"),
CDI.error = (CDI.error == "error")) %>%
mutate_at(vars(subid, CDI.form, CDI.agerange),
as_factor) %>%
left_join(data.labs) %>%
mutate_at(vars(labid), as_factor) %>%
mutate_at(vars(standardized.score.CDI.num), as.numeric)
# Check for labs that signed up but didn't send data:
missing_labs <- setdiff(levels(data.labs$labid),
levels(data.cdi$labid)) %>%
str_sort()
# Count data points, print cases were we have more than expected
data.cdi %>%
count(subid_unique, CDI.agerange) %>%
subset(n != 1)
# Only a few issues, let's check if they are subid typos or duplicate entries
data.cdi %>%
group_by(subid_unique, CDI.agerange) %>%
summarise(n = n(), n_unique = n_distinct(vocab_nwords)) %>%
subset(n != 1)
data.cdi <- data.cdi %>%
subset(!(subid_unique %in% c("babylab-lmu:35", "babylab-lmu:76", "unlv-musiclab:MB021") &
CDI.error %in% c("error", TRUE))) %>%
subset(!(subid_unique == "InfantCog-UBC:tp13" & vocab_nwords != 470)) %>%
unique()
# Import IDS data, rename variables, change column types
data.ids <- read_csv("data/ids_preference_trial.csv") %>%
rename(labid = lab) %>%
mutate_at(vars(labid, subid), as_factor) %>%
mutate(gender = str_sub(gender, 1, 1)) # Some data coded as "(FE)MALE" instead of F/M
# Check for labid present in CDI but not IDS (i.e. differently named), and vice versa
changed_labid <- setdiff(data.cdi$labid,
data.ids$labid)
unused_labid <- setdiff(data.ids$labid,
data.cdi$labid)
# By hand, we see that the names seem to be the same but with "-" or "_" added in data.cdi
# Only exception: leeds-lcdu in data.cdi should be lcduleeds
data.cdi <- data.cdi %>%
mutate(labid = case_when(labid == "leeds-lcdu" ~ "lcduleeds",
labid == "InfantCog-UBC" ~ "infantcogubc",
labid == "princeton-babylab" ~ "babylabprinceton",
labid == "um_babylanguagelab" ~ "bllumanitoba",
T ~ str_remove_all(labid, "-|_"))) %>%
mutate_at(vars(labid), as_factor)
# We check again for safety
changed_labid <- setdiff(data.cdi$labid,
data.ids$labid)
# Update subid_unique in CDI
data.cdi <- data.cdi %>%
mutate(subid_unique = paste(labid, subid, sep = ":"))
# Check for labid present in CDI but not IDS (i.e. differently named)
changed_subid <- setdiff(data.cdi$subid_unique,
data.ids$subid_unique)
# Many subids to check, let's extract the labs with issues
changed_subid_labs <- changed_subid %>%
str_match("[a-z]+") %>%
unique()
# Too many lab, let's print for each lab the proposed subids (CDI) and the possible subids (IDS)
unused_subid <- setdiff(data.ids$subid_unique,
data.cdi$subid_unique)
check_subid <- changed_subid_labs %>%
map(~list(CDI = str_subset(changed_subid, .x) %>% str_sort(),
IDS = str_subset(unused_subid, .x) %>% str_sort())) %>%
setNames(changed_subid_labs)
# Fix formatting issues, update subid_unique
data.cdi <- data.cdi %>%
mutate_at(vars(subid), as.character) %>%
mutate(subid = case_when(labid == "babylabbrookes" ~ str_replace(subid, "brookes-", "mb"),
labid == "bcrlunlv" ~ paste0("mb", str_pad(subid, 4, pad = 0)),
labid == "lscppsl" ~ paste0(subid, "lscppsl"),
labid == "babylabprinceton" ~ str_replace(subid, "MB",
"manybabies"),
labid == "unlvmusiclab" ~ str_replace(subid, "MB", "run"),
labid %in% changed_subid_labs ~
str_remove_all(subid, "-|_") %>% str_to_lower(),
T ~ subid),
subid_unique = paste(labid, subid, sep = ":")) %>%
mutate_at(vars(subid, subid_unique), as_factor)
# Check again for safety
changed_subid <- setdiff(data.cdi$subid_unique,
data.ids$subid_unique)
unused_subid <- setdiff(data.ids$subid_unique,
data.cdi$subid_unique)
changed_subid_labs <- changed_subid %>%
str_match("[a-z]+") %>%
unique()
check_subid <- changed_subid_labs %>%
map(~list(CDI = str_subset(changed_subid, .x) %>% str_sort(),
IDS = str_subset(unused_subid, .x) %>% str_sort())) %>%
setNames(changed_subid_labs)
check_subid.tibble <- check_subid %>%
map_dfr(~tibble(CDI = list(.x[["CDI"]]), IDS = list(.x[["IDS"]])), .id = "labid") %>%
gather(key = "dataset", value = "subids", -labid) %>%
unnest(subids) %>%
mutate(subids = str_remove(subids, "[a-z]+:")) %>%
mutate_all(as_factor)
# Import subids from all participants in IDS (before exculsion) for labs that provided CDI data
data.ids.full.subids <- read_csv("data/ids_full.csv",
col_types = cols_only(
lab = col_character(),
subid_unique = col_character()
)) %>%
rename(labid = lab) %>%
subset(labid %in% levels(data.cdi$labid))
# Compare to subids in CDI
changed_subid.full <- setdiff(data.cdi$subid_unique,
data.ids.full.subids$subid_unique)
unused_subid.full <- setdiff(data.ids.full.subids$subid_unique,
data.cdi$subid_unique)
changed_subid_labs.full <- changed_subid.full %>%
str_match("[a-z]+") %>%
unique()
check_subid.full <- changed_subid_labs.full %>%
map(~list(CDI = str_subset(changed_subid.full, .x) %>% str_sort(),
IDS = str_subset(unused_subid.full, .x) %>% str_sort())) %>%
setNames(changed_subid_labs.full)
check_subid.tibble.full <- check_subid.full %>%
map_dfr(~tibble(CDI = list(.x[["CDI"]]), IDS = list(.x[["IDS"]])), .id = "labid") %>%
gather(key = "dataset", value = "subids", -labid) %>%
unnest(subids) %>%
mutate(subids = str_remove(subids, "[a-z]+:")) %>%
mutate_all(as_factor)
# Save problematic labs' unmatched subids
check_subid.tibble.full %>%
nest(data = c(dataset, subids)) %>%
pwalk(~ write_csv(.y, paste0("data/subids/", .x, ".csv")))
data.cdi <- data.cdi %>%
mutate(subid = case_when(labid == "chosunbaby" ~ str_replace(subid, "h71y23", "h71o23"),
labid == "unlvmusiclab" ~ str_replace(subid, "run001", "run001pilot"),
T ~ as.character(subid)),
subid_unique = paste(labid, subid, sep = ":")) %>%
mutate_at(vars(subid, subid_unique), as_factor)
data.merged <- left_join(data.cdi, data.ids)
write_csv(data.merged, "data/01_processed_merged.csv")
View(check_subid.full)
View(data.cdi)
r sum(check_subid.tibble.full$dataset == "CDI")
sum(check_subid.tibble.full$dataset == "CDI")
sum(check_subid.tibble$dataset == "CDI")
source("helper/preprocessing.R")
knitr::opts_chunk$set(cache = TRUE)
# Lab information
data.labs <- read_labs("data/labs.csv")
# Participants data
data.cdi <- list.files("data/cdi_raw/") %>%
map_dfr(read_cdi, save_unprocessed = !file.exists("data/00_unprocessed_cdi_merged.csv")) %>%
drop_na(labid) %>%
mutate(subid_unique = paste(labid, subid, sep = ":"),
standardized.score.CDI.num = str_replace(standardized.score.CDI, "<1", "0"),
CDI.agerange = case_when(!(CDI.agerange %in% c("18", "24")) ~
if_else(CDI.agedays < 21*365.25/12, "18", "24"),
T ~ as.character(CDI.agerange)),
CDI.form = str_replace(CDI.form, "webcdi", "webCDI"),
CDI.error = (CDI.error == "error")) %>%
mutate_at(vars(subid, CDI.form, CDI.agerange),
as_factor) %>%
left_join(data.labs) %>%
mutate_at(vars(labid), as_factor) %>%
mutate_at(vars(standardized.score.CDI.num), as.numeric)
# Check for labs that signed up but didn't send data:
missing_labs <- setdiff(levels(data.labs$labid),
levels(data.cdi$labid)) %>%
str_sort()
# Count data points, print cases were we have more than expected
data.cdi %>%
count(subid_unique, CDI.agerange) %>%
subset(n != 1)
# Only a few issues, let's check if they are subid typos or duplicate entries
data.cdi %>%
group_by(subid_unique, CDI.agerange) %>%
summarise(n = n(), n_unique = n_distinct(vocab_nwords)) %>%
subset(n != 1)
data.cdi <- data.cdi %>%
subset(!(subid_unique %in% c("babylab-lmu:35", "babylab-lmu:76", "unlv-musiclab:MB021") &
CDI.error %in% c("error", TRUE))) %>%
subset(!(subid_unique == "InfantCog-UBC:tp13" & vocab_nwords != 470)) %>%
unique()
# Import IDS data, rename variables, change column types
data.ids <- read_csv("data/ids_preference_trial.csv") %>%
rename(labid = lab) %>%
mutate_at(vars(labid, subid), as_factor) %>%
mutate(gender = str_sub(gender, 1, 1)) # Some data coded as "(FE)MALE" instead of F/M
# Check for labid present in CDI but not IDS (i.e. differently named), and vice versa
changed_labid <- setdiff(data.cdi$labid,
data.ids$labid)
unused_labid <- setdiff(data.ids$labid,
data.cdi$labid)
# By hand, we see that the names seem to be the same but with "-" or "_" added in data.cdi
# Only exception: leeds-lcdu in data.cdi should be lcduleeds
data.cdi <- data.cdi %>%
mutate(labid = case_when(labid == "leeds-lcdu" ~ "lcduleeds",
labid == "InfantCog-UBC" ~ "infantcogubc",
labid == "princeton-babylab" ~ "babylabprinceton",
labid == "um_babylanguagelab" ~ "bllumanitoba",
T ~ str_remove_all(labid, "-|_"))) %>%
mutate_at(vars(labid), as_factor)
# We check again for safety
changed_labid <- setdiff(data.cdi$labid,
data.ids$labid)
# Update subid_unique in CDI
data.cdi <- data.cdi %>%
mutate(subid_unique = paste(labid, subid, sep = ":"))
# Check for labid present in CDI but not IDS (i.e. differently named)
changed_subid <- setdiff(data.cdi$subid_unique,
data.ids$subid_unique)
# Many subids to check, let's extract the labs with issues
changed_subid_labs <- changed_subid %>%
str_match("[a-z]+") %>%
unique()
# Too many lab, let's print for each lab the proposed subids (CDI) and the possible subids (IDS)
unused_subid <- setdiff(data.ids$subid_unique,
data.cdi$subid_unique)
check_subid <- changed_subid_labs %>%
map(~list(CDI = str_subset(changed_subid, .x) %>% str_sort(),
IDS = str_subset(unused_subid, .x) %>% str_sort())) %>%
setNames(changed_subid_labs)
# Fix formatting issues, update subid_unique
data.cdi <- data.cdi %>%
mutate_at(vars(subid), as.character) %>%
mutate(subid = case_when(labid == "babylabbrookes" ~ str_replace(subid, "brookes-", "mb"),
labid == "bcrlunlv" ~ paste0("mb", str_pad(subid, 4, pad = 0)),
labid == "lscppsl" ~ paste0(subid, "lscppsl"),
labid == "babylabprinceton" ~ str_replace(subid, "MB",
"manybabies"),
labid == "unlvmusiclab" ~ str_replace(subid, "MB", "run"),
labid %in% changed_subid_labs ~
str_remove_all(subid, "-|_") %>% str_to_lower(),
T ~ subid),
subid_unique = paste(labid, subid, sep = ":")) %>%
mutate_at(vars(subid, subid_unique), as_factor)
# Check again for safety
changed_subid <- setdiff(data.cdi$subid_unique,
data.ids$subid_unique)
unused_subid <- setdiff(data.ids$subid_unique,
data.cdi$subid_unique)
changed_subid_labs <- changed_subid %>%
str_match("[a-z]+") %>%
unique()
check_subid <- changed_subid_labs %>%
map(~list(CDI = str_subset(changed_subid, .x) %>% str_sort(),
IDS = str_subset(unused_subid, .x) %>% str_sort())) %>%
setNames(changed_subid_labs)
check_subid.tibble <- check_subid %>%
map_dfr(~tibble(CDI = list(.x[["CDI"]]), IDS = list(.x[["IDS"]])), .id = "labid") %>%
gather(key = "dataset", value = "subids", -labid) %>%
unnest(subids) %>%
mutate(subids = str_remove(subids, "[a-z]+:")) %>%
mutate_all(as_factor)
# Import subids from all participants in IDS (before exculsion) for labs that provided CDI data
data.ids.full.subids <- read_csv("data/ids_full.csv",
col_types = cols_only(
lab = col_character(),
subid_unique = col_character()
)) %>%
rename(labid = lab) %>%
subset(labid %in% levels(data.cdi$labid))
# Compare to subids in CDI
changed_subid.full <- setdiff(data.cdi$subid_unique,
data.ids.full.subids$subid_unique)
unused_subid.full <- setdiff(data.ids.full.subids$subid_unique,
data.cdi$subid_unique)
changed_subid_labs.full <- changed_subid.full %>%
str_match("[a-z]+") %>%
unique()
check_subid.full <- changed_subid_labs.full %>%
map(~list(CDI = str_subset(changed_subid.full, .x) %>% str_sort(),
IDS = str_subset(unused_subid.full, .x) %>% str_sort())) %>%
setNames(changed_subid_labs.full)
check_subid.tibble.full <- check_subid.full %>%
map_dfr(~tibble(CDI = list(.x[["CDI"]]), IDS = list(.x[["IDS"]])), .id = "labid") %>%
gather(key = "dataset", value = "subids", -labid) %>%
unnest(subids) %>%
mutate(subids = str_remove(subids, "[a-z]+:")) %>%
mutate_all(as_factor)
# Save problematic labs' unmatched subids
check_subid.tibble.full %>%
nest(data = c(dataset, subids)) %>%
pwalk(~ write_csv(.y, paste0("data/subids/", .x, ".csv")))
sum(check_subid.tibble.full$dataset == "CDI")
View(data.cdi)
